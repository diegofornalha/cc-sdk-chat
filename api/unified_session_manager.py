#!/usr/bin/env python3
"""
Gerenciador Simplificado de Sess√µes
Apenas mant√©m sess√µes separadas sem unifica√ß√£o
"""

import logging
from pathlib import Path

logger = logging.getLogger(__name__)

class UnifiedSessionManager:
    """Gerenciador simplificado - N√ÉO unifica sess√µes"""

    def __init__(self, project_path=None):
        """Inicializa gerenciador vazio"""
        self.is_running = False
        logger.info("‚úÖ Gerenciador simplificado inicializado (sem unifica√ß√£o)")

    def consolidate_existing_files(self):
        """N√ÉO consolida - mant√©m separado"""
        logger.info("‚õî Unifica√ß√£o DESABILITADA")
        return 0

    def sync_file_to_unified(self, source_file):
        """N√ÉO sincroniza - mant√©m separado"""
        return 0

    def force_consolidate_file(self, session_id):
        """N√ÉO for√ßa consolida√ß√£o"""
        logger.warning(f"‚ö†Ô∏è Tentativa de consolida√ß√£o bloqueada para: {session_id}")
        return False

    async def start_monitor(self):
        """N√ÉO monitora"""
        self.is_running = False
        logger.info("üö´ Monitor de unifica√ß√£o desabilitado")

    async def stop_monitor(self):
        """Para monitor (que nem est√° rodando)"""
        self.is_running = False

# Fun√ß√£o para compatibilidade
def init_unified_manager():
    """Retorna gerenciador vazio"""
    return UnifiedSessionManager()

def stop_unified_manager():
    """N√£o faz nada"""
    pass

def get_unified_manager():
    """Retorna None"""
    return None